create database onboardingv3;
use onboardingv3;

#Create Scripts

CREATE TABLE EMPLOYEEMASTER (
    ID BIGINT NOT NULL,
    NAME VARCHAR(64) NOT NULL,
    FIRSTNAME VARCHAR(64),
    LASTNAME VARCHAR(64),
    DOB DATE,
    PASSPORTNUMBER VARCHAR(16),
	EMAIL VARCHAR(255),
    PRIMARY KEY (ID)
);

#Country, Location, Role and Rate details
CREATE TABLE COUNTRIES(
ID INT NOT NULL AUTO_INCREMENT,
COUNTRY VARCHAR(255),
PRIMARY KEY(ID));

CREATE TABLE LOCATIONS(
ID INT NOT NULL AUTO_INCREMENT,
LOCATION VARCHAR(255),
PRIMARY KEY(ID));

CREATE TABLE COUNTRYMAPPING (
ID INT NOT NULL AUTO_INCREMENT,
COUNTRYID INT NOT NULL,
LOCATIONID INT NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY (COUNTRYID) REFERENCES COUNTRIES (ID),
FOREIGN KEY (LOCATIONID) REFERENCES LOCATIONS (ID)
);

CREATE TABLE ROLES(
ID INT NOT NULL AUTO_INCREMENT,
ROLE VARCHAR(255),
PRIMARY KEY(ID));

CREATE TABLE RATES(
ID INT NOT NULL AUTO_INCREMENT,
RATE VARCHAR(255),
PRIMARY KEY(ID));

CREATE TABLE ROLEMAPPING (
    ID INT NOT NULL AUTO_INCREMENT,
    ROLEID INT NOT NULL,
    RATEID INT NOT NULL,
	COUNTRYID INT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (ROLEID)
        REFERENCES ROLES (ID),
    FOREIGN KEY (RATEID)
        REFERENCES RATES (ID),
     FOREIGN KEY(COUNTRYID)
         REFERENCES COUNTRYMAPPING(ID)
);

#Team, Project, Requester & Processor
CREATE TABLE PROJECTINFO(
PROJECTID BIGINT NOT NULL,
PROJECTNAME VARCHAR(255),
PRIMARY KEY(PROJECTID));

CREATE TABLE PROCESSORS(
PROCESSORID BIGINT NOT NULL,
PROCESSORNAME VARCHAR(255),
PRIMARY KEY(PROCESSORID));

CREATE TABLE REQUESTERS(
REQUESTERID BIGINT NOT NULL,
REQUESTERNAME VARCHAR(255),
PRIMARY KEY(REQUESTERID));

#DROP TABLE PROJECTMAPPING;
CREATE TABLE PROJECTMAPPING (
    ID INT NOT NULL AUTO_INCREMENT,
    PROJECTID BIGINT NOT NULL,
    PROCESSORID BIGINT NOT NULL,
    REQUESTERID BIGINT NOT NULL,
    BSAID INT NOT NULL,
    STATUS varchar(20) DEFAULT 'ACTIVE',
    PRIMARY KEY (ID),
    FOREIGN KEY (PROJECTID)
        REFERENCES PROJECTINFO (PROJECTID),
    FOREIGN KEY (PROCESSORID)
        REFERENCES PROCESSORS (PROCESSORID),
    FOREIGN KEY (REQUESTERID)
        REFERENCES REQUESTERS (REQUESTERID),
	FOREIGN KEY (BSAID) 
		REFERENCES BSA(ID)
);

#DROP TABLE TEAMS;
CREATE TABLE TEAMS(
ID INT NOT NULL AUTO_INCREMENT,
TEAMNAME VARCHAR(255),
PROJECTMAPID INT NOT NULL,
STATUS varchar(20) DEFAULT 'ACTIVE',
    FOREIGN KEY (PROJECTMAPID)
        REFERENCES PROJECTMAPPING (ID),
PRIMARY KEY(ID)
);

CREATE TABLE BSA(
ID INT NOT NULL AUTO_INCREMENT,
NAME VARCHAR(255),
PRIMARY KEY(ID));

#Band, Movement, Attachment, Approval, Release status & Release summary
CREATE TABLE BANDS(
ID INT NOT NULL AUTO_INCREMENT,
NAME VARCHAR(255),
PRIMARY KEY(ID));

CREATE TABLE MOVEMENTINFO(
ID INT NOT NULL AUTO_INCREMENT,
VALUE VARCHAR(255),
PRIMARY KEY(ID));

CREATE TABLE MAILATTACHMENTS (
  ID INT NOT NULL AUTO_INCREMENT,
  FILENAME VARCHAR(200) DEFAULT NULL,
  FILEDATA longblob,
  PRIMARY KEY (ID)
);

CREATE TABLE APPROVALSTATUS(
ID INT NOT NULL AUTO_INCREMENT,
STATUS VARCHAR(255),
PRIMARY KEY(ID));

CREATE TABLE RELEASESTATUS(
ID INT NOT NULL AUTO_INCREMENT,
STATUS VARCHAR(255),
PRIMARY KEY(ID));

CREATE TABLE RELEASESUMMARY(
ID INT NOT NULL AUTO_INCREMENT,
SUMMARY VARCHAR(255),
PRIMARY KEY(ID));

#DROP TABLE EMPLOYEEPROJECTHISTORY;
CREATE TABLE EMPLOYEEPROJECTHISTORY (
    ID INT NOT NULL AUTO_INCREMENT,
    EMPLOYEEID BIGINT NOT NULL,
    PROJECT INT NOT NULL,
    TEAM INT NOT NULL,
    ROLE INT NOT NULL,
    COUNTRY INT NOT NULL,
    ONBOARDREQUESTER BIGINT,
	OFFBOARDREQUESTER BIGINT,
	OFFBOARDPROCESSOR BIGINT,
    STARTDATE DATE,
    NATIONWIDEID VARCHAR(64),
    NATIONWIDEIDCREATEDDATE DATE,
    FGONBOARDINGDATE DATE,
    MOVEMENTID INT,
    WORKFORCEID VARCHAR(64),
    SCRUMMASTER VARCHAR(64),
    APM VARCHAR(64),
    PPLMANAGER VARCHAR(64),
    BAND INT ,
    EXPERIENCE INT ,
	ATTACHMENTID INT,
    COMMENTS VARCHAR(255),
    SKILLSET VARCHAR(255),
    SKILLSUMMARY VARCHAR(255),
    APPROVALSTATUS INT NOT NULL,
    RELEASESTATUS INT NOT NULL,
    RELEASEDATE DATE,
    REASONFOROFFBOARDING INT,
    FOREIGN KEY (EMPLOYEEID)
        REFERENCES EMPLOYEEMASTER (ID),
    FOREIGN KEY (TEAM)
        REFERENCES TEAMS (ID),
	FOREIGN KEY (PROJECT)
        REFERENCES PROJECTMAPPING (ID),
    FOREIGN KEY (ROLE)
        REFERENCES ROLEMAPPING (ID),
    FOREIGN KEY (COUNTRY)
        REFERENCES COUNTRYMAPPING (ID),
    FOREIGN KEY (MOVEMENTID)
        REFERENCES MOVEMENTINFO (ID),
    FOREIGN KEY (APPROVALSTATUS)
        REFERENCES APPROVALSTATUS (ID),
    FOREIGN KEY (RELEASESTATUS)
        REFERENCES RELEASESTATUS (ID),
    FOREIGN KEY (ATTACHMENTID)
        REFERENCES MAILATTACHMENTS (ID),
	FOREIGN KEY (REASONFOROFFBOARDING)
        REFERENCES RELEASESUMMARY (ID),
	FOREIGN KEY (BAND)
        REFERENCES BANDS (ID),
    PRIMARY KEY (ID)
); 

CREATE TABLE USERS (
    USERNAME VARCHAR(50) NOT NULL PRIMARY KEY,
    PASSWORD VARCHAR(100) NOT NULL,
    ENABLED BOOLEAN NOT NULL
);

CREATE TABLE AUTHORITIES (
    USERNAME VARCHAR(50) NOT NULL,
    AUTHORITY VARCHAR(50) NOT NULL,
    FOREIGN KEY (USERNAME)
        REFERENCES USERS (USERNAME)
);

show tables;

delimiter //
CREATE PROCEDURE insertTeam(OUT id int, 
  IN team_name varchar(255), IN proj_id int, IN stat varchar(20)) 
BEGIN
INSERT INTO TEAMS(TEAMNAME,PROJECTMAPID,STATUS) VALUES (team_name,proj_id,stat);
SET id = LAST_INSERT_ID();
END //
delimiter ;


delimiter //
CREATE PROCEDURE insertMailObj(OUT id int, 
  IN file_name VARCHAR(200), IN file_data longblob) 
BEGIN
INSERT INTO MAILATTACHMENTS(FILENAME,FILEDATA) VALUES (file_name,file_data);
SET id = LAST_INSERT_ID();
END //
delimiter ;

